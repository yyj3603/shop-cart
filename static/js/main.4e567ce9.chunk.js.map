{"version":3,"sources":["components/ProductList.js","utils/utils.js","components/Cart.js","components/App.js","api/shop.js","models/products.js","models/cart.js","index.js"],"names":["connect","byId","result","products","map","id","dispatch","addToCart","type","payload","props","console","log","list","item","key","className","src","imgurl","title","price","inventory","onClick","disabled","cart","loading","added","quantity","quantities","subtotal","reduce","amount","toFixed","models","checking","effects","onCheckout","nodes","style","color","App","this","React","Component","axios","get","Promise","resolve","reject","setTimeout","schema","Entity","namespace","state","query","action","call","put","shop","res","normalize","data","reducers","setProducts","entities","decInventory","selected","initialState","add","select","product","checkout","includes","checkoutCompleted","app","dva","model","use","createLoading","router","start"],"mappings":"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","file":"static/js/main.4e567ce9.chunk.js","sourcesContent":["import React from 'react';\r\nimport {connect} from 'dva';\r\nimport { Button } from 'antd'\r\nimport { d } from '../utils/utils';\r\nimport '../style.css'\r\n\r\nconst ProductList = props => {\r\n  const { products, addToCart } = props;\r\n  console.log(\"products1:\"+products[0])\r\n  const list = (products || []).map((item, key) => (\r\n    <li key={key} className=\"li\">\r\n      <div>\r\n        <img src={item.imgurl}></img>\r\n        <span>{item.title}</span>{'-'}\r\n        <span>${item.price}</span>{' '}\r\n        <span>x{item.inventory}</span>\r\n      </div>\r\n      <div className=\"btn\">\r\n        <Button type=\"primary\" onClick={() => addToCart(item.id)} disabled={!item.inventory}>添加购物车</Button>\r\n      </div>\r\n    </li>\r\n  ));\r\n  return (\r\n    <div>\r\n      <h3>Products</h3>\r\n      <ul className=\"ul\">\r\n        {list}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({products}) => ({\r\n  products: d(products.byId, products.result)\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addToCart: (id) => dispatch({\r\n    type: 'cart/add',\r\n    payload: {\r\n      id\r\n    }\r\n  })\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductList);\r\n","\r\nexport const d = (byId, result) => result.map(id => byId[id])\r\n","import React from 'react';\r\nimport { connect } from 'dva';\r\nimport { Button } from 'antd'\r\nconst Cart = props => {\r\n  const { products, subtotal, onCheckout, loading, checking } = props;\r\n  const nodes = products.map((item, key) => (\r\n    <li key={key}>\r\n      {item.title} {item.price} x {item.quantity}\r\n    </li>\r\n  ));\r\n  return (\r\n    <div>\r\n      <h3>Your Cart</h3>\r\n      <ul>{nodes}</ul>\r\n      <div>Total: {subtotal}</div>\r\n      <div>\r\n        {checking && <div style={{color: 'red'}}>Checking ...</div>}\r\n        <Button onClick={onCheckout} disabled={subtotal <= 0.00 || loading}>Checkout</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({cart, products, loading}) => ({\r\n  products: cart.added.map(id => ({...products.byId[id], quantity: cart.quantities[id]})),\r\n  subtotal: cart.added.reduce((amount, id) => products.byId[id].price * cart.quantities[id] + amount, 0).toFixed(2),\r\n  loading: loading.models['cart'],\r\n  checking: loading.effects['cart/checkout']\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onCheckout: () => dispatch({\r\n    type: 'cart/checkout'\r\n  })\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\r\n","import React from 'react';\r\nimport { connect } from 'dva';\r\n//import { getAllProducts } from '../reducers/products';\r\nimport ProductList from './ProductList';\r\nimport Cart from './Cart';\r\nimport '../style.css'\r\n\r\nclass App extends React.Component {\r\n    componentDidMount () {\r\n        const { dispatch } = this.props;\r\n\r\n        dispatch({\r\n            type:'products/query'\r\n        });\r\n    }\r\n    render () {\r\n        return <div className=\"cart\">\r\n        <h2>购物车实例</h2>\r\n        <hr/>\r\n        <ProductList/>\r\n        <hr/>\r\n        <Cart/>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default connect()(App);\r\n","import axios from 'axios'\r\n\r\nexport default {\r\n  getProducts: () => axios.get('/products.json'),\r\n  buyProducts: (payload) => new Promise((resolve, reject) => setTimeout(() => resolve(payload), 2000)) //只是为了模拟axios.post的效果\r\n}\r\n","import { normalize, schema } from \"normalizr\";\r\n\r\nimport shop from \"../api/shop\";\r\n\r\n// 关于normalizr库，与官方示例直接用byId, allIds去组织还别扭\r\n// 此处仅仅是为了尝试下引入这个库的效果，它的用法还有待深入\r\n// 但是不论哪一种写法，无揭示了一个问题，如果state需要相关引用，\r\n// 根据ID组织状态是一个合理的方式。\r\nconst products = new schema.Entity(\"products\");\r\n\r\nexport default {\r\n  namespace: \"products\",\r\n  state: {\r\n    result: [],\r\n    byId: {}\r\n  },\r\n  effects: {\r\n    *query(action, { call, put }) {\r\n      const res = yield call(shop.getProducts);\r\n      \r\n      yield put({\r\n        type: \"setProducts\",\r\n        payload: normalize(res.data, [products])\r\n      });\r\n    }\r\n  },\r\n  reducers: {\r\n    setProducts: (state, { payload }) => {\r\n      return {\r\n        ...state,\r\n        byId: payload.entities.products,\r\n        result: payload.result\r\n      };\r\n    },\r\n    decInventory: (state, { payload: { id } }) => {\r\n      const selected = state.byId[id];\r\n      return {\r\n        ...state,\r\n        byId: {\r\n          ...state.byId,\r\n          [id]: { ...selected, inventory: selected.inventory - 1 }\r\n        }\r\n      };\r\n    }\r\n  }\r\n};\r\n","import shop from \"../api/shop\";\r\n\r\nconst initialState = {\r\n    added: [],\r\n    quantities: {\r\n    }\r\n  }\r\nexport default {\r\n  namespace: \"cart\",\r\n  state: initialState,\r\n  effects: {\r\n    *add({payload: { id }}, { call, put, select }) {\r\n      const product = yield select(state => state.products.byId[id]);\r\n      console.log('product', product);\r\n      if (product.inventory > 0) {\r\n        yield put({\r\n          type: 'products/decInventory', \r\n          payload: {\r\n            id\r\n          }\r\n        })\r\n        yield put({\r\n          type: 'addToCart',\r\n          payload: {\r\n            id\r\n          }\r\n        })\r\n      }\r\n    },\r\n    *checkout(action, {call, put, select}) {\r\n      const { cart } = yield select();\r\n      console.log(\"checkout cart\", cart);\r\n      const res = yield call(shop.buyProducts, cart);\r\n      yield put({\r\n        type: \"checkoutCompleted\",\r\n        payload: res\r\n      });\r\n    }\r\n  },\r\n  reducers: {\r\n    addToCart: (state, { payload: { id } }) => {\r\n      return {\r\n        ...state,\r\n        added: state.added.includes(id) ? [...state.added] : [...state.added, id],\r\n        quantities: {\r\n          ...state.quantities,\r\n          [id]: (state.quantities[id] || 0) + 1\r\n        }\r\n      }\r\n    },\r\n    checkoutCompleted: () => initialState\r\n  }\r\n};\r\n\r\n","import React from 'react';\r\nimport dva from 'dva';\r\nimport createLoading from 'dva-loading';\r\nimport App from './components/App';\r\nimport products from './models/products';\r\nimport cart from './models/cart';\r\n\r\nconst app = dva();\r\napp.model(products);\r\napp.model(cart);\r\napp.use(createLoading());\r\napp.router(() => <App />);\r\napp.start('#root');\r\n"],"sourceRoot":""}